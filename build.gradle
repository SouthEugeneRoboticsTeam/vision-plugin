buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

repositories {
    jcenter()
    maven { url 'http://first.wpi.edu/FRC/roborio/maven/release/' }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "edu.wpi.first.shuffleboard:api:1.3.1"
    compile "edu.wpi.first.wpiutil:wpiutil-java:3.2.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Task to generate sources JAR
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin.srcDirs
}

// Use tasks above to define artifacts
artifacts {
    archives sourcesJar
}

publishing {
    // By passing -Pcustom_local=/some/path and running the
    // publishLibraryPublicationToCustomLocalRepository task you can publish this library to a
    // custom maven repository location on your machine.
    repositories {
        maven {
            name 'CustomLocal'
            url uri(project.hasProperty('custom_local') ? project.getProperty('custom_local') : '/tmp/')
        }
    }

    repositories {
        maven {
            name 'BuildLocal'
            url "$buildDir/repo"
        }
    }
}

publishing {
    publications {
        "${project.name}"(MavenPublication) {

            groupId "org.sert2521"
            artifactId "vision-plugin"
            version "1.0.0"

            artifact "$buildDir/libs/${project.name}.jar"
            artifact sourcesJar

            pom.withXml {
                // Dependencies
                def dependenciesNode = asNode().getAt("dependencies")[0]
                if (dependenciesNode == null) {
                    dependenciesNode = asNode().appendNode("dependencies")
                }

                // Add all that are 'compile'
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}
